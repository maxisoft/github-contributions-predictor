name: Predict & Publish next activities counters

on:
  push:
    branches:
      - main
      - dev
  schedule:
    - cron: '0 */2 * * *'

  workflow_dispatch:

permissions: read-all

concurrency:
  group: Predict-${{ github.ref == 'refs/heads/main' }}
  

jobs:
  predict:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        model: [no_scaling, with_scaling]

    steps:
    - uses: actions/checkout@v3
    - name: Download required ml files
      run: |
        wget https://github.com/maxisoft/github-contributions-predictor/releases/download/v0.1.0/model_${{ matrix.model }}.pth -O model.pth
        wget https://github.com/maxisoft/github-contributions-predictor/releases/download/v0.1.0/scalers.pkl.z -O scalers.pkl.z
    #- name: Add conda to system path
    #  run: |
    #    # $CONDA is an environment variable pointing to the root of the miniconda directory
    #    echo $CONDA/bin >> $GITHUB_PATH
    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        channel-priority: flexible
        python-version: 3.9
    - run: |
          conda install python=3.9
          conda info
          conda list
          conda config --show-sources
          conda config --show

    - name: Install dependencies
      run: |
        conda install pip
        conda install --file requirements.txt
        conda install pytorch cpuonly -c pytorch
        #conda install numpy pandas scipy scikit-learn tqdm

    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        conda run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        conda run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Download previous predictions
      run: |
        wget https://github.com/maxisoft/github-contributions-predictor/archive/refs/heads/pred_history_${{ matrix.model }}.zip -O /tmp/pred_history.zip ||
        wget https://github.com/maxisoft/github-contributions-predictor/archive/refs/heads/pred_history.zip -O /tmp/pred_history.zip &&
        unzip /tmp/pred_history.zip -d /tmp &&
        mkdir -p out &&
        cp --archive /tmp/github-contributions-predictor-pred_history*/* out &&
        ls -lah out || :

    - name: Predict
      run: |
        conda run python 4-inference.py
      env:
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_ACTOR: ${{ github.repository_owner }}

    - uses: actions/upload-artifact@v3
      name: Collect Artifacts
      with:
        name: preds_${{ matrix.model }}
        path: |
          out/*

  push:
    needs: predict
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      max-parallel: 2
      matrix:
        model: [ no_scaling, with_scaling ]

    steps:
      - uses: actions/checkout@v3
      - name: prepare pred_history branch
        run: |
          git fetch --all --depth=1 --no-tags
          git switch pred_history_${{ matrix.model }} || git switch --orphan pred_history_${{ matrix.model }}
          git branch --set-upstream-to=origin/pred_history_${{ matrix.model }} pred_history_${{ matrix.model }} && 
          git pull --no-ff --stat --allow-unrelated-histories || git reset --hard origin/pred_history_${{ matrix.model }} || :
      - name: download preds artifact
        uses: actions/download-artifact@v3
        with:
          name: preds_${{ matrix.model }}

      - name: Push to remote
        if: github.ref == 'refs/heads/main'
        run: |
          set -eu
          ls -lah
          git add -A *
          if ! git diff --cached --quiet; then
            if ! git config --get user.email > /dev/null; then
                git config --local user.email "${{ github.repository_owner }}@users.noreply.github.com"
            fi
            if ! git config --get user.name > /dev/null; then
                git config --local user.name "${{ github.repository_owner }}"
            fi
            git commit -m "Automatic commit for latest predictions with ${{ matrix.model }}"
            git push --set-upstream origin pred_history_${{ matrix.model }}
          fi




